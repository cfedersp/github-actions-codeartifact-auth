import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { CodeartifactClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../CodeartifactClient";
import { PutPackageOriginConfigurationRequest, PutPackageOriginConfigurationResult } from "../models/models_0";
export interface PutPackageOriginConfigurationCommandInput extends PutPackageOriginConfigurationRequest {
}
export interface PutPackageOriginConfigurationCommandOutput extends PutPackageOriginConfigurationResult, __MetadataBearer {
}
/**
 * <p>Sets the package origin configuration for a package.</p>
 *          <p>The package origin configuration determines how new versions of a package can be added to a repository. You can allow or block direct
 *     publishing of new package versions, or ingestion and retaining of new package versions from an external connection or upstream source.
 *     For more information about package origin controls and configuration, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/package-origin-controls.html">Editing package origin controls</a> in the <i>CodeArtifact User Guide</i>.</p>
 *          <p>
 *             <code>PutPackageOriginConfiguration</code> can be called on a package that doesn't yet exist in the repository. When called
 *       on a package that does not exist, a package is created in the repository with no versions and the requested restrictions are set on the package.
 *       This can be used to preemptively block ingesting or retaining any versions from external connections or upstream repositories, or to block
 *       publishing any versions of the package into the repository before connecting any package managers or publishers to the repository.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { CodeartifactClient, PutPackageOriginConfigurationCommand } from "@aws-sdk/client-codeartifact"; // ES Modules import
 * // const { CodeartifactClient, PutPackageOriginConfigurationCommand } = require("@aws-sdk/client-codeartifact"); // CommonJS import
 * const client = new CodeartifactClient(config);
 * const command = new PutPackageOriginConfigurationCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link PutPackageOriginConfigurationCommandInput} for command's `input` shape.
 * @see {@link PutPackageOriginConfigurationCommandOutput} for command's `response` shape.
 * @see {@link CodeartifactClientResolvedConfig | config} for CodeartifactClient's `config` shape.
 *
 */
export declare class PutPackageOriginConfigurationCommand extends $Command<PutPackageOriginConfigurationCommandInput, PutPackageOriginConfigurationCommandOutput, CodeartifactClientResolvedConfig> {
    readonly input: PutPackageOriginConfigurationCommandInput;
    constructor(input: PutPackageOriginConfigurationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: CodeartifactClientResolvedConfig, options?: __HttpHandlerOptions): Handler<PutPackageOriginConfigurationCommandInput, PutPackageOriginConfigurationCommandOutput>;
    private serialize;
    private deserialize;
}
