import { EndpointsInputConfig, EndpointsResolvedConfig, RegionInputConfig, RegionResolvedConfig } from "@aws-sdk/config-resolver";
import { HostHeaderInputConfig, HostHeaderResolvedConfig } from "@aws-sdk/middleware-host-header";
import { RetryInputConfig, RetryResolvedConfig } from "@aws-sdk/middleware-retry";
import { AwsAuthInputConfig, AwsAuthResolvedConfig } from "@aws-sdk/middleware-signing";
import { UserAgentInputConfig, UserAgentResolvedConfig } from "@aws-sdk/middleware-user-agent";
import { HttpHandler as __HttpHandler } from "@aws-sdk/protocol-http";
import { Client as __Client, DefaultsMode, SmithyConfiguration as __SmithyConfiguration, SmithyResolvedConfiguration as __SmithyResolvedConfiguration } from "@aws-sdk/smithy-client";
import { BodyLengthCalculator as __BodyLengthCalculator, Credentials as __Credentials, Decoder as __Decoder, Encoder as __Encoder, HashConstructor as __HashConstructor, HttpHandlerOptions as __HttpHandlerOptions, Logger as __Logger, Provider as __Provider, Provider, RegionInfoProvider, StreamCollector as __StreamCollector, UrlParser as __UrlParser, UserAgent as __UserAgent } from "@aws-sdk/types";
import { AssociateExternalConnectionCommandInput, AssociateExternalConnectionCommandOutput } from "./commands/AssociateExternalConnectionCommand";
import { CopyPackageVersionsCommandInput, CopyPackageVersionsCommandOutput } from "./commands/CopyPackageVersionsCommand";
import { CreateDomainCommandInput, CreateDomainCommandOutput } from "./commands/CreateDomainCommand";
import { CreateRepositoryCommandInput, CreateRepositoryCommandOutput } from "./commands/CreateRepositoryCommand";
import { DeleteDomainCommandInput, DeleteDomainCommandOutput } from "./commands/DeleteDomainCommand";
import { DeleteDomainPermissionsPolicyCommandInput, DeleteDomainPermissionsPolicyCommandOutput } from "./commands/DeleteDomainPermissionsPolicyCommand";
import { DeletePackageVersionsCommandInput, DeletePackageVersionsCommandOutput } from "./commands/DeletePackageVersionsCommand";
import { DeleteRepositoryCommandInput, DeleteRepositoryCommandOutput } from "./commands/DeleteRepositoryCommand";
import { DeleteRepositoryPermissionsPolicyCommandInput, DeleteRepositoryPermissionsPolicyCommandOutput } from "./commands/DeleteRepositoryPermissionsPolicyCommand";
import { DescribeDomainCommandInput, DescribeDomainCommandOutput } from "./commands/DescribeDomainCommand";
import { DescribePackageCommandInput, DescribePackageCommandOutput } from "./commands/DescribePackageCommand";
import { DescribePackageVersionCommandInput, DescribePackageVersionCommandOutput } from "./commands/DescribePackageVersionCommand";
import { DescribeRepositoryCommandInput, DescribeRepositoryCommandOutput } from "./commands/DescribeRepositoryCommand";
import { DisassociateExternalConnectionCommandInput, DisassociateExternalConnectionCommandOutput } from "./commands/DisassociateExternalConnectionCommand";
import { DisposePackageVersionsCommandInput, DisposePackageVersionsCommandOutput } from "./commands/DisposePackageVersionsCommand";
import { GetAuthorizationTokenCommandInput, GetAuthorizationTokenCommandOutput } from "./commands/GetAuthorizationTokenCommand";
import { GetDomainPermissionsPolicyCommandInput, GetDomainPermissionsPolicyCommandOutput } from "./commands/GetDomainPermissionsPolicyCommand";
import { GetPackageVersionAssetCommandInput, GetPackageVersionAssetCommandOutput } from "./commands/GetPackageVersionAssetCommand";
import { GetPackageVersionReadmeCommandInput, GetPackageVersionReadmeCommandOutput } from "./commands/GetPackageVersionReadmeCommand";
import { GetRepositoryEndpointCommandInput, GetRepositoryEndpointCommandOutput } from "./commands/GetRepositoryEndpointCommand";
import { GetRepositoryPermissionsPolicyCommandInput, GetRepositoryPermissionsPolicyCommandOutput } from "./commands/GetRepositoryPermissionsPolicyCommand";
import { ListDomainsCommandInput, ListDomainsCommandOutput } from "./commands/ListDomainsCommand";
import { ListPackagesCommandInput, ListPackagesCommandOutput } from "./commands/ListPackagesCommand";
import { ListPackageVersionAssetsCommandInput, ListPackageVersionAssetsCommandOutput } from "./commands/ListPackageVersionAssetsCommand";
import { ListPackageVersionDependenciesCommandInput, ListPackageVersionDependenciesCommandOutput } from "./commands/ListPackageVersionDependenciesCommand";
import { ListPackageVersionsCommandInput, ListPackageVersionsCommandOutput } from "./commands/ListPackageVersionsCommand";
import { ListRepositoriesCommandInput, ListRepositoriesCommandOutput } from "./commands/ListRepositoriesCommand";
import { ListRepositoriesInDomainCommandInput, ListRepositoriesInDomainCommandOutput } from "./commands/ListRepositoriesInDomainCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { PutDomainPermissionsPolicyCommandInput, PutDomainPermissionsPolicyCommandOutput } from "./commands/PutDomainPermissionsPolicyCommand";
import { PutPackageOriginConfigurationCommandInput, PutPackageOriginConfigurationCommandOutput } from "./commands/PutPackageOriginConfigurationCommand";
import { PutRepositoryPermissionsPolicyCommandInput, PutRepositoryPermissionsPolicyCommandOutput } from "./commands/PutRepositoryPermissionsPolicyCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdatePackageVersionsStatusCommandInput, UpdatePackageVersionsStatusCommandOutput } from "./commands/UpdatePackageVersionsStatusCommand";
import { UpdateRepositoryCommandInput, UpdateRepositoryCommandOutput } from "./commands/UpdateRepositoryCommand";
export declare type ServiceInputTypes = AssociateExternalConnectionCommandInput | CopyPackageVersionsCommandInput | CreateDomainCommandInput | CreateRepositoryCommandInput | DeleteDomainCommandInput | DeleteDomainPermissionsPolicyCommandInput | DeletePackageVersionsCommandInput | DeleteRepositoryCommandInput | DeleteRepositoryPermissionsPolicyCommandInput | DescribeDomainCommandInput | DescribePackageCommandInput | DescribePackageVersionCommandInput | DescribeRepositoryCommandInput | DisassociateExternalConnectionCommandInput | DisposePackageVersionsCommandInput | GetAuthorizationTokenCommandInput | GetDomainPermissionsPolicyCommandInput | GetPackageVersionAssetCommandInput | GetPackageVersionReadmeCommandInput | GetRepositoryEndpointCommandInput | GetRepositoryPermissionsPolicyCommandInput | ListDomainsCommandInput | ListPackageVersionAssetsCommandInput | ListPackageVersionDependenciesCommandInput | ListPackageVersionsCommandInput | ListPackagesCommandInput | ListRepositoriesCommandInput | ListRepositoriesInDomainCommandInput | ListTagsForResourceCommandInput | PutDomainPermissionsPolicyCommandInput | PutPackageOriginConfigurationCommandInput | PutRepositoryPermissionsPolicyCommandInput | TagResourceCommandInput | UntagResourceCommandInput | UpdatePackageVersionsStatusCommandInput | UpdateRepositoryCommandInput;
export declare type ServiceOutputTypes = AssociateExternalConnectionCommandOutput | CopyPackageVersionsCommandOutput | CreateDomainCommandOutput | CreateRepositoryCommandOutput | DeleteDomainCommandOutput | DeleteDomainPermissionsPolicyCommandOutput | DeletePackageVersionsCommandOutput | DeleteRepositoryCommandOutput | DeleteRepositoryPermissionsPolicyCommandOutput | DescribeDomainCommandOutput | DescribePackageCommandOutput | DescribePackageVersionCommandOutput | DescribeRepositoryCommandOutput | DisassociateExternalConnectionCommandOutput | DisposePackageVersionsCommandOutput | GetAuthorizationTokenCommandOutput | GetDomainPermissionsPolicyCommandOutput | GetPackageVersionAssetCommandOutput | GetPackageVersionReadmeCommandOutput | GetRepositoryEndpointCommandOutput | GetRepositoryPermissionsPolicyCommandOutput | ListDomainsCommandOutput | ListPackageVersionAssetsCommandOutput | ListPackageVersionDependenciesCommandOutput | ListPackageVersionsCommandOutput | ListPackagesCommandOutput | ListRepositoriesCommandOutput | ListRepositoriesInDomainCommandOutput | ListTagsForResourceCommandOutput | PutDomainPermissionsPolicyCommandOutput | PutPackageOriginConfigurationCommandOutput | PutRepositoryPermissionsPolicyCommandOutput | TagResourceCommandOutput | UntagResourceCommandOutput | UpdatePackageVersionsStatusCommandOutput | UpdateRepositoryCommandOutput;
export interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {
    
    requestHandler?: __HttpHandler;
    
    sha256?: __HashConstructor;
    
    urlParser?: __UrlParser;
    
    bodyLengthChecker?: __BodyLengthCalculator;
    
    streamCollector?: __StreamCollector;
    
    base64Decoder?: __Decoder;
    
    base64Encoder?: __Encoder;
    
    utf8Decoder?: __Decoder;
    
    utf8Encoder?: __Encoder;
    
    runtime?: string;
    
    disableHostPrefix?: boolean;
    
    maxAttempts?: number | __Provider<number>;
    
    retryMode?: string | __Provider<string>;
    
    logger?: __Logger;
    
    useDualstackEndpoint?: boolean | __Provider<boolean>;
    
    useFipsEndpoint?: boolean | __Provider<boolean>;
    
    serviceId?: string;
    
    region?: string | __Provider<string>;
    
    credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;
    
    regionInfoProvider?: RegionInfoProvider;
    
    defaultUserAgentProvider?: Provider<__UserAgent>;
    
    defaultsMode?: DefaultsMode | Provider<DefaultsMode>;
}
declare type CodeartifactClientConfigType = Partial<__SmithyConfiguration<__HttpHandlerOptions>> & ClientDefaults & RegionInputConfig & EndpointsInputConfig & RetryInputConfig & HostHeaderInputConfig & AwsAuthInputConfig & UserAgentInputConfig;

export interface CodeartifactClientConfig extends CodeartifactClientConfigType {
}
declare type CodeartifactClientResolvedConfigType = __SmithyResolvedConfiguration<__HttpHandlerOptions> & Required<ClientDefaults> & RegionResolvedConfig & EndpointsResolvedConfig & RetryResolvedConfig & HostHeaderResolvedConfig & AwsAuthResolvedConfig & UserAgentResolvedConfig;

export interface CodeartifactClientResolvedConfig extends CodeartifactClientResolvedConfigType {
}

export declare class CodeartifactClient extends __Client<__HttpHandlerOptions, ServiceInputTypes, ServiceOutputTypes, CodeartifactClientResolvedConfig> {
    
    readonly config: CodeartifactClientResolvedConfig;
    constructor(configuration: CodeartifactClientConfig);
    
    destroy(): void;
}
export {};
